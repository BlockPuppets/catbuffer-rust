use catbuffer_rust::mosaic_address_restriction_transaction_builder::MosaicAddressRestrictionTransactionBuilder;

const VECTOR_TRANSACTION_BUILDER: [&str; 3] = [
    "B800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009801508C58666C746F471538E43002B85B1CD542F9874B2861183919BA8787B6000000000190514200000000000000000100000000000000010000000000000001000000000000000900000000000000080000000000000090D66C33420E5411995BACFCA2B28CF1C9F5DD7AB1204EA4",
    "B8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001A8514200000000000000002B0200000000000001000000000000005C110000000000000000000000000000000000000000000080D66C33420E5411995BACFCA2B28CF1C9F5DD7AB1A9C05C",
    "B8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001A8514200000000000000002B020000000000006EC265194C0501D45C110000000000000000000000000000000000000000000080D66C33420E5411995BACFCA2B28CF1C9F5DD7AB1A9C05C"
];

#[test]
fn test_should_create_transactions() {
    for vector in VECTOR_TRANSACTION_BUILDER.iter() {
        let bytes_vector = hex::decode(vector).unwrap();
        let build_object = MosaicAddressRestrictionTransactionBuilder::from_binary(&*bytes_vector);
        assert_eq!(build_object.serializer(), bytes_vector);
    }
}